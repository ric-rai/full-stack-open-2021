{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["url","pUrl","id","axios","get","then","r","data","obj","post","delete","put","PersonForm","onSubmitHandler","inputs","onSubmit","map","i","key","label","type","Input","props","Persons","persons","handleDelete","p","name","Person","number","text","handleClick","Button","onClick","Notification","msg","color","undefined","className","style","App","useState","setPersons","filtered","setFiltered","filter","setFilter","newName","setNewName","newNumber","setNewNumber","msgObj","setMsgObj","changeInputValue","setter","e","target","value","getPerIdByName","find","setPersonStates","pers","changeFilter","useEffect","personService","match","RegExp","onChange","preventDefault","setPerStatesResetForm","notify","setTimeout","addPerson","concat","window","confirm","isUpdMsg","newP","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06b2c878.chunk.js","sourcesContent":["import axios from 'axios'\nconst url = '/api/persons'\nconst pUrl = id => `${url}/${id}`\n\nconst getAll = () => axios.get(url).then(r => r.data)\nconst create = obj => axios.post(url, obj).then(r => r.data)\nconst del = id => axios.delete(pUrl(id)).then(r => r.data)\nconst update = obj => axios.put(pUrl(obj.id), obj).then(r => r.data)\n\nexport default {getAll, create, del, update}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst PersonForm = ({onSubmitHandler, inputs}) => (\n    <form onSubmit={onSubmitHandler}>\n        {inputs.map(i => <Input {...i} key={i.label}/> )}\n        <div><button type=\"submit\">add</button></div>\n    </form>\n)\nconst Input = props => <div>{props.label}:{\" \"} <input {...props}/></div>\nconst Persons = ({persons, handleDelete}) => persons.map(p => \n    <Person {...p} key={p.name} handleDelete={handleDelete}/>)\nconst Person = ({name, number, handleDelete}) => \n    <div>{name} {number} <Button text={\"delete\"} handleClick={handleDelete(name)}/></div> \nconst Button = ({text, handleClick}) => <button onClick={handleClick}>{text}</button>\nconst Notification = ({msg, color}) => msg === undefined \n    ? null : <div className='notification' style={{'color': color}}>{msg}</div>\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [filtered, setFiltered] = useState(persons)\n    const [filter, setFilter] = useState('')\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [msgObj, setMsgObj] = useState(null)\n    const changeInputValue = (setter) => e => setter(e.target.value)\n    const getPerIdByName = name => persons.find(p => p.name === name)?.id\n    const setPersonStates = pers => (setPersons(pers), changeFilter(filter, [...pers])) \n    useEffect(() => void personService.getAll().then(setPersonStates), [])\n\n    const addPerson = e => {\n        e.preventDefault()\n        const p = {name: newName, number: newNumber, id: getPerIdByName(newName)}\n        const setPerStatesResetForm = pers => (setPersonStates(pers), setNewName(''), setNewNumber(''))\n        const getUpdPersons = newP => persons.map(p => p.id !== newP.id ? p : newP)\n        const isUpdMsg = p => `${p.name} is already added to phonebook, replace the old number with a new one?`\n        const notify = (msg, color) => (setMsgObj({msg, color}), setTimeout(() => setMsgObj(null), 3000))\n        const updPerson = p => (setPerStatesResetForm(getUpdPersons(p)), notify(`Updated ${p.name}`))\n        const addPerson = p => (setPerStatesResetForm(persons.concat(p)), notify(`Added ${p.name}`))\n        if (p.id === undefined) personService.create(p).then(addPerson) \n        else if (window.confirm(isUpdMsg(p))) personService.update(p).then(updPerson)\n            .catch(() => notify(`Information of ${p.name} has already been removed from the server`, 'red'))\n    }\n    const handleDelete = name => () => (\n        window.confirm(`Delete ${name}?`) ? personService.del(getPerIdByName(name))\n            .then(() => setPersonStates(persons.filter(p => p.name !== name))) : undefined \n    )\n    const changeFilter = (value, pers = persons) => (\n        setFilter(value), setFiltered(value === '' \n            ? [...pers] : pers.filter(p => p.name.match(new RegExp(value, 'i'))) )\n    ) \n    return (\n        <div>\n            <h2>Phonebook</h2>\n                <Input label={'filter'} value={filter} onChange={e => changeFilter(e.target.value)}/>\n            <Notification {...msgObj}/>\n            <h2>Add a new</h2>\n            <PersonForm onSubmitHandler={addPerson} inputs={[\n                {label: 'name', value: newName, onChange: changeInputValue(setNewName)},\n                {label: 'number', value: newNumber, onChange: changeInputValue(setNewNumber)}\n            ]}/>\n            <h2>Numbers</h2>\n            <Persons persons={filtered} handleDelete={handleDelete}/>\n        </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}